name: Build x264 with MSVC on Windows

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-x264-msvc:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download x264 source
      run: |
        curl -LO http://download.videolan.org/pub/x264/snapshots/x264-snapshot-20230529-2245.tar.bz2
        tar -xjf x264-snapshot-20230529-2245.tar.bz2
        ren x264-snapshot-20230529-2245 x264

    - name: Build x264 with MSVC
      shell: cmd
      run: |
        REM 查找vcvars64.bat路径（根据你用的VS版本调整）
        set VSWHERE="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
        for /f "delims=" %%i in ('%VSWHERE% -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath') do set VS_PATH=%%i

        echo Found VS installation path: %VS_PATH%

        if not exist "%VS_PATH%\VC\Auxiliary\Build\vcvars64.bat" (
          echo ERROR: vcvars64.bat not found!
          exit /b 1
        )

        call "%VS_PATH%\VC\Auxiliary\Build\vcvars64.bat"

        cd x264\build

        nmake -f win32\Makefile.msvc clean
        nmake -f win32\Makefile.msvc

    - name: Collect artifacts and zip
      shell: powershell
      run: |
        $outdir = "$(System.DefaultWorkingDirectory)\artifacts"
        New-Item -ItemType Directory -Force -Path $outdir

        Copy-Item -Path "x264\build\include\x264.h" -Destination $outdir
        Copy-Item -Path "x264\build\lib\x264.lib" -Destination $outdir
        Copy-Item -Path "x264\build\bin\x264.dll" -Destination $outdir

        $zipPath = "$(System.DefaultWorkingDirectory)\x264-msvc-win.zip"
        if (Test-Path $zipPath) { Remove-Item $zipPath }
        Compress-Archive -Path "$outdir\*" -DestinationPath $zipPath

    - name: Create git tag v1.0.0
      id: tag
      run: |
        git config user.name "github-actions"
        git config user.email "actions@github.com"

        if git rev-parse v1.0.0 >/dev/null 2>&1; then
          echo "Tag v1.0.0 already exists"
        else
          git tag -a v1.0.0 -m "Build x264 MSVC v1.0.0"
          git push origin v1.0.0
        fi

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0
        name: x264 MSVC Windows v1.0.0
        body: x264 build compiled with MSVC on Windows.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0
        files: x264-msvc-win.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
